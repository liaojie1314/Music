// Generated by view binder compiler. Do not edit!
package com.example.music.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.airbnb.lottie.LottieAnimationView;
import com.example.music.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnLoginByPhone;

  @NonNull
  public final Button btnLoginByUid;

  @NonNull
  public final LottieAnimationView lottieBackground;

  @NonNull
  public final TextView tvLogo;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnCancel,
      @NonNull Button btnLoginByPhone, @NonNull Button btnLoginByUid,
      @NonNull LottieAnimationView lottieBackground, @NonNull TextView tvLogo) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnLoginByPhone = btnLoginByPhone;
    this.btnLoginByUid = btnLoginByUid;
    this.lottieBackground = lottieBackground;
    this.tvLogo = tvLogo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancel;
      Button btnCancel = rootView.findViewById(id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnLoginByPhone;
      Button btnLoginByPhone = rootView.findViewById(id);
      if (btnLoginByPhone == null) {
        break missingId;
      }

      id = R.id.btnLoginByUid;
      Button btnLoginByUid = rootView.findViewById(id);
      if (btnLoginByUid == null) {
        break missingId;
      }

      id = R.id.lottieBackground;
      LottieAnimationView lottieBackground = rootView.findViewById(id);
      if (lottieBackground == null) {
        break missingId;
      }

      id = R.id.tvLogo;
      TextView tvLogo = rootView.findViewById(id);
      if (tvLogo == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, btnCancel, btnLoginByPhone,
          btnLoginByUid, lottieBackground, tvLogo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
