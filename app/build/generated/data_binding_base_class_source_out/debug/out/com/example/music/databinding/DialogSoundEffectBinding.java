// Generated by view binder compiler. Do not edit!
package com.example.music.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.music.R;
import com.example.music.widget.ItemLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSoundEffectBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ItemLayout itemEqualizer;

  @NonNull
  public final ItemLayout itemPitch;

  @NonNull
  public final ImageView ivDecreasePitch;

  @NonNull
  public final ImageView ivIncreasePitch;

  @NonNull
  public final TextView tvPitch;

  private DialogSoundEffectBinding(@NonNull LinearLayout rootView,
      @NonNull ItemLayout itemEqualizer, @NonNull ItemLayout itemPitch,
      @NonNull ImageView ivDecreasePitch, @NonNull ImageView ivIncreasePitch,
      @NonNull TextView tvPitch) {
    this.rootView = rootView;
    this.itemEqualizer = itemEqualizer;
    this.itemPitch = itemPitch;
    this.ivDecreasePitch = ivDecreasePitch;
    this.ivIncreasePitch = ivIncreasePitch;
    this.tvPitch = tvPitch;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSoundEffectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSoundEffectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_sound_effect, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSoundEffectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.itemEqualizer;
      ItemLayout itemEqualizer = rootView.findViewById(id);
      if (itemEqualizer == null) {
        break missingId;
      }

      id = R.id.itemPitch;
      ItemLayout itemPitch = rootView.findViewById(id);
      if (itemPitch == null) {
        break missingId;
      }

      id = R.id.ivDecreasePitch;
      ImageView ivDecreasePitch = rootView.findViewById(id);
      if (ivDecreasePitch == null) {
        break missingId;
      }

      id = R.id.ivIncreasePitch;
      ImageView ivIncreasePitch = rootView.findViewById(id);
      if (ivIncreasePitch == null) {
        break missingId;
      }

      id = R.id.tvPitch;
      TextView tvPitch = rootView.findViewById(id);
      if (tvPitch == null) {
        break missingId;
      }

      return new DialogSoundEffectBinding((LinearLayout) rootView, itemEqualizer, itemPitch,
          ivDecreasePitch, ivIncreasePitch, tvPitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
