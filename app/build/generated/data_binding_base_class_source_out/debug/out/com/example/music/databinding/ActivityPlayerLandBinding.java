// Generated by view binder compiler. Do not edit!
package com.example.music.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.dirror.lyricviewx.LyricViewX;
import com.example.music.R;
import com.example.music.widget.TimeTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.qinc.lib.edgetranslucent.EdgeTransparentView;

public final class ActivityPlayerLandBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout blurViewCover;

  @NonNull
  public final ConstraintLayout clArtist;

  @NonNull
  public final ConstraintLayout clBase;

  @NonNull
  public final ConstraintLayout clBottom;

  @NonNull
  public final ConstraintLayout clCd;

  @NonNull
  public final ConstraintLayout clControl;

  @NonNull
  public final ConstraintLayout clLyric;

  @NonNull
  public final ConstraintLayout clMenu;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ConstraintLayout clTape;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ConstraintLayout clTapeCenter;

  @NonNull
  public final CardView cvCd;

  @NonNull
  public final CardView cvCover;

  @NonNull
  public final EdgeTransparentView edgeTransparentView;

  @NonNull
  public final ImageView ivArtist;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivBackground;

  @NonNull
  public final ImageView ivComment;

  @NonNull
  public final ImageView ivCover;

  @NonNull
  public final ImageView ivDownload;

  @NonNull
  public final ImageView ivEqualizer;

  @NonNull
  public final ImageView ivLast;

  @NonNull
  public final ImageView ivLike;

  @NonNull
  public final ImageView ivList;

  @NonNull
  public final ImageView ivMode;

  @NonNull
  public final ImageView ivMore;

  @NonNull
  public final ImageView ivNext;

  @NonNull
  public final ImageView ivPlay;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView ivTapeNextIn;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView ivTapePreviousIn;

  @NonNull
  public final ImageView ivTranslation;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView ivTypeNext;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ImageView ivTypePrevious;

  @NonNull
  public final ImageView ivVolume;

  @NonNull
  public final LyricViewX lyricView;

  @NonNull
  public final SeekBar seekBar;

  @NonNull
  public final SeekBar seekBarVolume;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView textView;

  @NonNull
  public final ConstraintLayout titleBar;

  @NonNull
  public final TimeTextView ttvDuration;

  @NonNull
  public final TimeTextView ttvProgress;

  @NonNull
  public final TextView tvArtist;

  @NonNull
  public final TextView tvName;

  private ActivityPlayerLandBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout blurViewCover, @NonNull ConstraintLayout clArtist,
      @NonNull ConstraintLayout clBase, @NonNull ConstraintLayout clBottom,
      @NonNull ConstraintLayout clCd, @NonNull ConstraintLayout clControl,
      @NonNull ConstraintLayout clLyric, @NonNull ConstraintLayout clMenu,
      @Nullable ConstraintLayout clTape, @Nullable ConstraintLayout clTapeCenter,
      @NonNull CardView cvCd, @NonNull CardView cvCover,
      @NonNull EdgeTransparentView edgeTransparentView, @NonNull ImageView ivArtist,
      @NonNull ImageView ivBack, @NonNull ImageView ivBackground, @NonNull ImageView ivComment,
      @NonNull ImageView ivCover, @NonNull ImageView ivDownload, @NonNull ImageView ivEqualizer,
      @NonNull ImageView ivLast, @NonNull ImageView ivLike, @NonNull ImageView ivList,
      @NonNull ImageView ivMode, @NonNull ImageView ivMore, @NonNull ImageView ivNext,
      @NonNull ImageView ivPlay, @Nullable ImageView ivTapeNextIn,
      @Nullable ImageView ivTapePreviousIn, @NonNull ImageView ivTranslation,
      @Nullable ImageView ivTypeNext, @Nullable ImageView ivTypePrevious,
      @NonNull ImageView ivVolume, @NonNull LyricViewX lyricView, @NonNull SeekBar seekBar,
      @NonNull SeekBar seekBarVolume, @Nullable TextView textView,
      @NonNull ConstraintLayout titleBar, @NonNull TimeTextView ttvDuration,
      @NonNull TimeTextView ttvProgress, @NonNull TextView tvArtist, @NonNull TextView tvName) {
    this.rootView = rootView;
    this.blurViewCover = blurViewCover;
    this.clArtist = clArtist;
    this.clBase = clBase;
    this.clBottom = clBottom;
    this.clCd = clCd;
    this.clControl = clControl;
    this.clLyric = clLyric;
    this.clMenu = clMenu;
    this.clTape = clTape;
    this.clTapeCenter = clTapeCenter;
    this.cvCd = cvCd;
    this.cvCover = cvCover;
    this.edgeTransparentView = edgeTransparentView;
    this.ivArtist = ivArtist;
    this.ivBack = ivBack;
    this.ivBackground = ivBackground;
    this.ivComment = ivComment;
    this.ivCover = ivCover;
    this.ivDownload = ivDownload;
    this.ivEqualizer = ivEqualizer;
    this.ivLast = ivLast;
    this.ivLike = ivLike;
    this.ivList = ivList;
    this.ivMode = ivMode;
    this.ivMore = ivMore;
    this.ivNext = ivNext;
    this.ivPlay = ivPlay;
    this.ivTapeNextIn = ivTapeNextIn;
    this.ivTapePreviousIn = ivTapePreviousIn;
    this.ivTranslation = ivTranslation;
    this.ivTypeNext = ivTypeNext;
    this.ivTypePrevious = ivTypePrevious;
    this.ivVolume = ivVolume;
    this.lyricView = lyricView;
    this.seekBar = seekBar;
    this.seekBarVolume = seekBarVolume;
    this.textView = textView;
    this.titleBar = titleBar;
    this.ttvDuration = ttvDuration;
    this.ttvProgress = ttvProgress;
    this.tvArtist = tvArtist;
    this.tvName = tvName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPlayerLandBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPlayerLandBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_player_land, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPlayerLandBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blurViewCover;
      ConstraintLayout blurViewCover = rootView.findViewById(id);
      if (blurViewCover == null) {
        break missingId;
      }

      id = R.id.clArtist;
      ConstraintLayout clArtist = rootView.findViewById(id);
      if (clArtist == null) {
        break missingId;
      }

      ConstraintLayout clBase = (ConstraintLayout) rootView;

      id = R.id.clBottom;
      ConstraintLayout clBottom = rootView.findViewById(id);
      if (clBottom == null) {
        break missingId;
      }

      id = R.id.clCd;
      ConstraintLayout clCd = rootView.findViewById(id);
      if (clCd == null) {
        break missingId;
      }

      id = R.id.clControl;
      ConstraintLayout clControl = rootView.findViewById(id);
      if (clControl == null) {
        break missingId;
      }

      id = R.id.clLyric;
      ConstraintLayout clLyric = rootView.findViewById(id);
      if (clLyric == null) {
        break missingId;
      }

      id = R.id.clMenu;
      ConstraintLayout clMenu = rootView.findViewById(id);
      if (clMenu == null) {
        break missingId;
      }

      id = R.id.clTape;
      ConstraintLayout clTape = rootView.findViewById(id);

      id = R.id.clTapeCenter;
      ConstraintLayout clTapeCenter = rootView.findViewById(id);

      id = R.id.cvCd;
      CardView cvCd = rootView.findViewById(id);
      if (cvCd == null) {
        break missingId;
      }

      id = R.id.cvCover;
      CardView cvCover = rootView.findViewById(id);
      if (cvCover == null) {
        break missingId;
      }

      id = R.id.edgeTransparentView;
      EdgeTransparentView edgeTransparentView = rootView.findViewById(id);
      if (edgeTransparentView == null) {
        break missingId;
      }

      id = R.id.ivArtist;
      ImageView ivArtist = rootView.findViewById(id);
      if (ivArtist == null) {
        break missingId;
      }

      id = R.id.ivBack;
      ImageView ivBack = rootView.findViewById(id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.ivBackground;
      ImageView ivBackground = rootView.findViewById(id);
      if (ivBackground == null) {
        break missingId;
      }

      id = R.id.ivComment;
      ImageView ivComment = rootView.findViewById(id);
      if (ivComment == null) {
        break missingId;
      }

      id = R.id.ivCover;
      ImageView ivCover = rootView.findViewById(id);
      if (ivCover == null) {
        break missingId;
      }

      id = R.id.ivDownload;
      ImageView ivDownload = rootView.findViewById(id);
      if (ivDownload == null) {
        break missingId;
      }

      id = R.id.ivEqualizer;
      ImageView ivEqualizer = rootView.findViewById(id);
      if (ivEqualizer == null) {
        break missingId;
      }

      id = R.id.ivLast;
      ImageView ivLast = rootView.findViewById(id);
      if (ivLast == null) {
        break missingId;
      }

      id = R.id.ivLike;
      ImageView ivLike = rootView.findViewById(id);
      if (ivLike == null) {
        break missingId;
      }

      id = R.id.ivList;
      ImageView ivList = rootView.findViewById(id);
      if (ivList == null) {
        break missingId;
      }

      id = R.id.ivMode;
      ImageView ivMode = rootView.findViewById(id);
      if (ivMode == null) {
        break missingId;
      }

      id = R.id.ivMore;
      ImageView ivMore = rootView.findViewById(id);
      if (ivMore == null) {
        break missingId;
      }

      id = R.id.ivNext;
      ImageView ivNext = rootView.findViewById(id);
      if (ivNext == null) {
        break missingId;
      }

      id = R.id.ivPlay;
      ImageView ivPlay = rootView.findViewById(id);
      if (ivPlay == null) {
        break missingId;
      }

      id = R.id.ivTapeNextIn;
      ImageView ivTapeNextIn = rootView.findViewById(id);

      id = R.id.ivTapePreviousIn;
      ImageView ivTapePreviousIn = rootView.findViewById(id);

      id = R.id.ivTranslation;
      ImageView ivTranslation = rootView.findViewById(id);
      if (ivTranslation == null) {
        break missingId;
      }

      id = R.id.ivTypeNext;
      ImageView ivTypeNext = rootView.findViewById(id);

      id = R.id.ivTypePrevious;
      ImageView ivTypePrevious = rootView.findViewById(id);

      id = R.id.ivVolume;
      ImageView ivVolume = rootView.findViewById(id);
      if (ivVolume == null) {
        break missingId;
      }

      id = R.id.lyricView;
      LyricViewX lyricView = rootView.findViewById(id);
      if (lyricView == null) {
        break missingId;
      }

      id = R.id.seekBar;
      SeekBar seekBar = rootView.findViewById(id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.seekBarVolume;
      SeekBar seekBarVolume = rootView.findViewById(id);
      if (seekBarVolume == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);

      id = R.id.titleBar;
      ConstraintLayout titleBar = rootView.findViewById(id);
      if (titleBar == null) {
        break missingId;
      }

      id = R.id.ttvDuration;
      TimeTextView ttvDuration = rootView.findViewById(id);
      if (ttvDuration == null) {
        break missingId;
      }

      id = R.id.ttvProgress;
      TimeTextView ttvProgress = rootView.findViewById(id);
      if (ttvProgress == null) {
        break missingId;
      }

      id = R.id.tvArtist;
      TextView tvArtist = rootView.findViewById(id);
      if (tvArtist == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = rootView.findViewById(id);
      if (tvName == null) {
        break missingId;
      }

      return new ActivityPlayerLandBinding((ConstraintLayout) rootView, blurViewCover, clArtist,
          clBase, clBottom, clCd, clControl, clLyric, clMenu, clTape, clTapeCenter, cvCd, cvCover,
          edgeTransparentView, ivArtist, ivBack, ivBackground, ivComment, ivCover, ivDownload,
          ivEqualizer, ivLast, ivLike, ivList, ivMode, ivMore, ivNext, ivPlay, ivTapeNextIn,
          ivTapePreviousIn, ivTranslation, ivTypeNext, ivTypePrevious, ivVolume, lyricView, seekBar,
          seekBarVolume, textView, titleBar, ttvDuration, ttvProgress, tvArtist, tvName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
